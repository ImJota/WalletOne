{"ast":null,"code":"import _slicedToArray from\"/home/jose/Documentos/Proyects/wallet/wallet-adapter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{FormControlLabel,Switch,Table,TableBody,TableCell,TableHead,TableRow,Tooltip}from'@material-ui/core';import{WalletConnectButton as AntDesignWalletConnectButton,WalletDisconnectButton as AntDesignWalletDisconnectButton,WalletModalButton as AntDesignWalletModalButton,WalletModalProvider as AntDesignWalletModalProvider,WalletMultiButton as AntDesignWalletMultiButton}from'@solana/wallet-adapter-ant-design';import{WalletAdapterNetwork}from'@solana/wallet-adapter-base';import{WalletConnectButton as MaterialUIWalletConnectButton,WalletDialogButton as MaterialUIWalletDialogButton,WalletDialogProvider as MaterialUIWalletDialogProvider,WalletDisconnectButton as MaterialUIWalletDisconnectButton,WalletMultiButton as MaterialUIWalletMultiButton}from'@solana/wallet-adapter-material-ui';import{ConnectionProvider,useLocalStorage,WalletProvider}from'@solana/wallet-adapter-react';import{WalletConnectButton as ReactUIWalletConnectButton,WalletDisconnectButton as ReactUIWalletDisconnectButton,WalletModalButton as ReactUIWalletModalButton,WalletModalProvider as ReactUIWalletModalProvider,WalletMultiButton as ReactUIWalletMultiButton}from'@solana/wallet-adapter-react-ui';import{getBloctoWallet,getLedgerWallet,getPhantomWallet,getSlopeWallet,getSolflareWallet,getSolletWallet,getSolletExtensionWallet,getTorusWallet}from'@solana/wallet-adapter-wallets';import{clusterApiUrl}from'@solana/web3.js';import{useSnackbar}from'notistack';import React,{useCallback,useMemo}from'react';import{version}from'../package.json';import RequestAirdrop from'./RequestAirdrop';import SendTransaction from'./SendTransaction';import SignMessage from'./SignMessage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Demo=function Demo(){var network=WalletAdapterNetwork.Devnet;var endpoint=useMemo(function(){return clusterApiUrl(network);},[network]);var _useLocalStorage=useLocalStorage('autoConnect',false),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),autoConnect=_useLocalStorage2[0],setAutoConnect=_useLocalStorage2[1];var wallets=useMemo(function(){return[getPhantomWallet(),getSolflareWallet(),getSlopeWallet(),getTorusWallet({options:{clientId:'BOM5Cl7PXgE9Ylq1Z1tqzhpydY0RVr8k90QQ85N7AKI5QGSrr9iDC-3rvmy0K_hF0JfpLMiXoDhta68JwcxS1LQ'}}),getLedgerWallet(),getBloctoWallet({network:network}),getSolletWallet({network:network}),getSolletExtensionWallet({network:network})];},[network]);var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var onError=useCallback(function(error){enqueueSnackbar(error.message?\"\".concat(error.name,\": \").concat(error.message):error.name,{variant:'error'});console.error(error);},[enqueueSnackbar]);return/*#__PURE__*/_jsx(ConnectionProvider,{endpoint:endpoint,children:/*#__PURE__*/_jsx(WalletProvider,{wallets:wallets,onError:onError,autoConnect:autoConnect,children:/*#__PURE__*/_jsx(MaterialUIWalletDialogProvider,{children:/*#__PURE__*/_jsx(AntDesignWalletModalProvider,{children:/*#__PURE__*/_jsx(ReactUIWalletModalProvider,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{width:240,children:\"Component\"}),/*#__PURE__*/_jsx(TableCell,{width:240,children:\"Material UI\"}),/*#__PURE__*/_jsx(TableCell,{width:240,children:\"Ant Design\"}),/*#__PURE__*/_jsx(TableCell,{width:240,children:\"React UI\"}),/*#__PURE__*/_jsxs(TableCell,{children:[\"Example v\",version]})]})}),/*#__PURE__*/_jsxs(TableBody,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Connect Button\"}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(MaterialUIWalletConnectButton,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(AntDesignWalletConnectButton,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(ReactUIWalletConnectButton,{})}),/*#__PURE__*/_jsx(TableCell,{})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Disconnect Button\"}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(MaterialUIWalletDisconnectButton,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(AntDesignWalletDisconnectButton,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(ReactUIWalletDisconnectButton,{})}),/*#__PURE__*/_jsx(TableCell,{})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Dialog/Modal Button\"}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(MaterialUIWalletDialogButton,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(AntDesignWalletModalButton,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(ReactUIWalletModalButton,{})}),/*#__PURE__*/_jsx(TableCell,{})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Multi Button\"}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(MaterialUIWalletMultiButton,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(AntDesignWalletMultiButton,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(ReactUIWalletMultiButton,{})}),/*#__PURE__*/_jsx(TableCell,{})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Tooltip,{title:\"Only runs if the wallet is ready to connect\",placement:\"left\",children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"autoConnect\",color:\"secondary\",checked:autoConnect,onChange:function onChange(event,checked){return setAutoConnect(checked);}}),label:\"AutoConnect\"})})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(RequestAirdrop,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(SendTransaction,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(SignMessage,{})})]})]})]})})})})})});};","map":{"version":3,"sources":["/home/jose/Documentos/Proyects/wallet/wallet-adapter/packages/example/src/Demo.tsx"],"names":["FormControlLabel","Switch","Table","TableBody","TableCell","TableHead","TableRow","Tooltip","WalletConnectButton","AntDesignWalletConnectButton","WalletDisconnectButton","AntDesignWalletDisconnectButton","WalletModalButton","AntDesignWalletModalButton","WalletModalProvider","AntDesignWalletModalProvider","WalletMultiButton","AntDesignWalletMultiButton","WalletAdapterNetwork","MaterialUIWalletConnectButton","WalletDialogButton","MaterialUIWalletDialogButton","WalletDialogProvider","MaterialUIWalletDialogProvider","MaterialUIWalletDisconnectButton","MaterialUIWalletMultiButton","ConnectionProvider","useLocalStorage","WalletProvider","ReactUIWalletConnectButton","ReactUIWalletDisconnectButton","ReactUIWalletModalButton","ReactUIWalletModalProvider","ReactUIWalletMultiButton","getBloctoWallet","getLedgerWallet","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","getTorusWallet","clusterApiUrl","useSnackbar","React","useCallback","useMemo","version","RequestAirdrop","SendTransaction","SignMessage","Demo","network","Devnet","endpoint","autoConnect","setAutoConnect","wallets","options","clientId","enqueueSnackbar","onError","error","message","name","variant","console","event","checked"],"mappings":"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","sourcesContent":["import { FormControlLabel, Switch, Table, TableBody, TableCell, TableHead, TableRow, Tooltip } from '@material-ui/core';\nimport {\n    WalletConnectButton as AntDesignWalletConnectButton,\n    WalletDisconnectButton as AntDesignWalletDisconnectButton,\n    WalletModalButton as AntDesignWalletModalButton,\n    WalletModalProvider as AntDesignWalletModalProvider,\n    WalletMultiButton as AntDesignWalletMultiButton,\n} from '@solana/wallet-adapter-ant-design';\nimport { WalletAdapterNetwork, WalletError } from '@solana/wallet-adapter-base';\nimport {\n    WalletConnectButton as MaterialUIWalletConnectButton,\n    WalletDialogButton as MaterialUIWalletDialogButton,\n    WalletDialogProvider as MaterialUIWalletDialogProvider,\n    WalletDisconnectButton as MaterialUIWalletDisconnectButton,\n    WalletMultiButton as MaterialUIWalletMultiButton,\n} from '@solana/wallet-adapter-material-ui';\nimport { ConnectionProvider, useLocalStorage, WalletProvider } from '@solana/wallet-adapter-react';\nimport {\n    WalletConnectButton as ReactUIWalletConnectButton,\n    WalletDisconnectButton as ReactUIWalletDisconnectButton,\n    WalletModalButton as ReactUIWalletModalButton,\n    WalletModalProvider as ReactUIWalletModalProvider,\n    WalletMultiButton as ReactUIWalletMultiButton,\n} from '@solana/wallet-adapter-react-ui';\nimport {\n    getBloctoWallet,\n    getLedgerWallet,\n    getPhantomWallet,\n    getSlopeWallet,\n    getSolflareWallet,\n    getSolletWallet,\n    getSolletExtensionWallet,\n    getTorusWallet,\n} from '@solana/wallet-adapter-wallets';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { useSnackbar } from 'notistack';\nimport React, { FC, useCallback, useMemo } from 'react';\nimport { version } from '../package.json';\nimport RequestAirdrop from './RequestAirdrop';\nimport SendTransaction from './SendTransaction';\nimport SignMessage from './SignMessage';\n\nexport const Demo: FC = () => {\n    const network = WalletAdapterNetwork.Devnet;\n    const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n    const [autoConnect, setAutoConnect] = useLocalStorage('autoConnect', false);\n\n    const wallets = useMemo(\n        () => [\n            getPhantomWallet(),\n            getSolflareWallet(),\n            getSlopeWallet(),\n            getTorusWallet({\n                options: {\n                    clientId: 'BOM5Cl7PXgE9Ylq1Z1tqzhpydY0RVr8k90QQ85N7AKI5QGSrr9iDC-3rvmy0K_hF0JfpLMiXoDhta68JwcxS1LQ',\n                },\n            }),\n            getLedgerWallet(),\n            getBloctoWallet({ network }),\n            getSolletWallet({ network }),\n            getSolletExtensionWallet({ network }),\n        ],\n        [network]\n    );\n\n    const { enqueueSnackbar } = useSnackbar();\n    const onError = useCallback(\n        (error: WalletError) => {\n            enqueueSnackbar(error.message ? `${error.name}: ${error.message}` : error.name, { variant: 'error' });\n            console.error(error);\n        },\n        [enqueueSnackbar]\n    );\n\n    return (\n        <ConnectionProvider endpoint={endpoint}>\n            <WalletProvider wallets={wallets} onError={onError} autoConnect={autoConnect}>\n                <MaterialUIWalletDialogProvider>\n                    <AntDesignWalletModalProvider>\n                        <ReactUIWalletModalProvider>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell width={240}>Component</TableCell>\n                                        <TableCell width={240}>Material UI</TableCell>\n                                        <TableCell width={240}>Ant Design</TableCell>\n                                        <TableCell width={240}>React UI</TableCell>\n                                        <TableCell>Example v{version}</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>Connect Button</TableCell>\n                                        <TableCell>\n                                            <MaterialUIWalletConnectButton />\n                                        </TableCell>\n                                        <TableCell>\n                                            <AntDesignWalletConnectButton />\n                                        </TableCell>\n                                        <TableCell>\n                                            <ReactUIWalletConnectButton />\n                                        </TableCell>\n                                        <TableCell></TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Disconnect Button</TableCell>\n                                        <TableCell>\n                                            <MaterialUIWalletDisconnectButton />\n                                        </TableCell>\n                                        <TableCell>\n                                            <AntDesignWalletDisconnectButton />\n                                        </TableCell>\n                                        <TableCell>\n                                            <ReactUIWalletDisconnectButton />\n                                        </TableCell>\n                                        <TableCell></TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Dialog/Modal Button</TableCell>\n                                        <TableCell>\n                                            <MaterialUIWalletDialogButton />\n                                        </TableCell>\n                                        <TableCell>\n                                            <AntDesignWalletModalButton />\n                                        </TableCell>\n                                        <TableCell>\n                                            <ReactUIWalletModalButton />\n                                        </TableCell>\n                                        <TableCell></TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Multi Button</TableCell>\n                                        <TableCell>\n                                            <MaterialUIWalletMultiButton />\n                                        </TableCell>\n                                        <TableCell>\n                                            <AntDesignWalletMultiButton />\n                                        </TableCell>\n                                        <TableCell>\n                                            <ReactUIWalletMultiButton />\n                                        </TableCell>\n                                        <TableCell></TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell></TableCell>\n                                        <TableCell>\n                                            <Tooltip\n                                                title=\"Only runs if the wallet is ready to connect\"\n                                                placement=\"left\"\n                                            >\n                                                <FormControlLabel\n                                                    control={\n                                                        <Switch\n                                                            name=\"autoConnect\"\n                                                            color=\"secondary\"\n                                                            checked={autoConnect}\n                                                            onChange={(event, checked) => setAutoConnect(checked)}\n                                                        />\n                                                    }\n                                                    label=\"AutoConnect\"\n                                                />\n                                            </Tooltip>\n                                        </TableCell>\n                                        <TableCell>\n                                            <RequestAirdrop />\n                                        </TableCell>\n                                        <TableCell>\n                                            <SendTransaction />\n                                        </TableCell>\n                                        <TableCell>\n                                            <SignMessage />\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </ReactUIWalletModalProvider>\n                    </AntDesignWalletModalProvider>\n                </MaterialUIWalletDialogProvider>\n            </WalletProvider>\n        </ConnectionProvider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}